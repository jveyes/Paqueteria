#!/usr/bin/env python3
"""
Script de prueba para verificar la funcionalidad SMTP
"""

import asyncio
import sys
import os
import smtplib
import ssl
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from datetime import datetime

# Agregar el directorio del proyecto al path
sys.path.append('/home/stk/Insync/dispapyrussas@gmail.com/Google Drive/PAPYRUS/EL CLUB/SERVICIO DE PAQUETERIA/Paqueteria v3.5/code')

# Configuraci√≥n SMTP desde el .env
SMTP_CONFIG = {
    "host": "taylor.mxrouting.net",
    "port": 587,
    "user": "guia@papyrus.com.co",
    "password": "^Kxub2aoh@xC2LsK",
    "from_name": "PAQUETES EL CLUB",
    "from_email": "guia@papyrus.com.co"
}

async def test_smtp_connection():
    """Probar conexi√≥n SMTP b√°sica"""
    print("üîç Probando conexi√≥n SMTP...")
    
    try:
        # Crear contexto SSL
        context = ssl.create_default_context()
        
        # Conectar al servidor SMTP
        print(f"üì° Conectando a {SMTP_CONFIG['host']}:{SMTP_CONFIG['port']}")
        with smtplib.SMTP(SMTP_CONFIG['host'], SMTP_CONFIG['port']) as server:
            print("‚úÖ Conexi√≥n establecida")
            
            # Habilitar TLS
            print("üîí Iniciando TLS...")
            server.starttls(context=context)
            print("‚úÖ TLS habilitado")
            
            # Autenticaci√≥n
            print(f"üîê Autenticando con {SMTP_CONFIG['user']}...")
            server.login(SMTP_CONFIG['user'], SMTP_CONFIG['password'])
            print("‚úÖ Autenticaci√≥n exitosa")
            
            return True
            
    except smtplib.SMTPAuthenticationError as e:
        print(f"‚ùå Error de autenticaci√≥n: {e}")
        return False
    except smtplib.SMTPServerDisconnected as e:
        print(f"‚ùå Servidor desconectado: {e}")
        return False
    except Exception as e:
        print(f"‚ùå Error de conexi√≥n: {e}")
        return False

async def test_send_email(to_email: str):
    """Probar env√≠o de email"""
    print(f"\nüìß Probando env√≠o de email a {to_email}...")
    
    try:
        # Crear mensaje
        msg = MIMEMultipart('alternative')
        msg['Subject'] = "üß™ Prueba SMTP - PAQUETES EL CLUB v3.5"
        msg['From'] = f"{SMTP_CONFIG['from_name']} <{SMTP_CONFIG['from_email']}>"
        msg['To'] = to_email
        
        # Contenido del email
        html_content = f"""
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="UTF-8">
            <title>Prueba SMTP - PAQUETES EL CLUB</title>
            <style>
                body {{ font-family: Arial, sans-serif; line-height: 1.6; color: #333; }}
                .container {{ max-width: 600px; margin: 0 auto; padding: 20px; }}
                .header {{ background-color: #3B82F6; color: white; padding: 20px; text-align: center; border-radius: 8px 8px 0 0; }}
                .content {{ background-color: #f8f9fa; padding: 20px; border-radius: 0 0 8px 8px; }}
                .success {{ color: #10B981; font-weight: bold; }}
                .info {{ background-color: #EFF6FF; padding: 15px; border-radius: 8px; margin: 15px 0; }}
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <h1>üöÄ PAQUETES EL CLUB v3.5</h1>
                    <p>Prueba de Funcionalidad SMTP</p>
                </div>
                <div class="content">
                    <h2 class="success">‚úÖ ¬°Email enviado exitosamente!</h2>
                    <p>Este es un email de prueba para verificar que la funcionalidad SMTP est√° funcionando correctamente.</p>
                    
                    <div class="info">
                        <h3>üìã Informaci√≥n de la Prueba:</h3>
                        <ul>
                            <li><strong>Fecha:</strong> {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}</li>
                            <li><strong>Servidor SMTP:</strong> {SMTP_CONFIG['host']}:{SMTP_CONFIG['port']}</li>
                            <li><strong>Remitente:</strong> {SMTP_CONFIG['from_email']}</li>
                            <li><strong>Destinatario:</strong> {to_email}</li>
                            <li><strong>Estado:</strong> <span class="success">FUNCIONANDO</span></li>
                        </ul>
                    </div>
                    
                    <p>Si recibes este email, significa que:</p>
                    <ul>
                        <li>‚úÖ La conexi√≥n SMTP est√° funcionando</li>
                        <li>‚úÖ La autenticaci√≥n es correcta</li>
                        <li>‚úÖ El env√≠o de emails est√° operativo</li>
                        <li>‚úÖ El sistema de notificaciones puede funcionar</li>
                    </ul>
                    
                    <hr>
                    <p><small>Este es un email autom√°tico de prueba del sistema PAQUETES EL CLUB v3.5</small></p>
                </div>
            </div>
        </body>
        </html>
        """
        
        # Agregar contenido HTML
        html_part = MIMEText(html_content, 'html', 'utf-8')
        msg.attach(html_part)
        
        # Configurar contexto SSL
        context = ssl.create_default_context()
        
        # Enviar email
        with smtplib.SMTP(SMTP_CONFIG['host'], SMTP_CONFIG['port']) as server:
            server.starttls(context=context)
            server.login(SMTP_CONFIG['user'], SMTP_CONFIG['password'])
            server.send_message(msg)
            
        print(f"‚úÖ Email enviado exitosamente a {to_email}")
        return True
        
    except Exception as e:
        print(f"‚ùå Error enviando email: {e}")
        return False

async def main():
    """Funci√≥n principal"""
    print("=" * 60)
    print("üß™ PRUEBA DE FUNCIONALIDAD SMTP - PAQUETES EL CLUB v3.5")
    print("=" * 60)
    
    # Probar conexi√≥n
    connection_ok = await test_smtp_connection()
    
    if connection_ok:
        # Probar env√≠o de email
        test_email = "jveyes@gmail.com"
        email_ok = await test_send_email(test_email)
        
        if email_ok:
            print("\n" + "=" * 60)
            print("üéâ ¬°PRUEBA EXITOSA!")
            print("=" * 60)
            print("‚úÖ La funcionalidad SMTP est√° funcionando correctamente")
            print(f"üìß Email de prueba enviado a: {test_email}")
            print("üìã Revisa tu bandeja de entrada (y spam) para confirmar la recepci√≥n")
        else:
            print("\n" + "=" * 60)
            print("‚ùå PRUEBA FALLIDA")
            print("=" * 60)
            print("‚ùå Error en el env√≠o del email")
    else:
        print("\n" + "=" * 60)
        print("‚ùå PRUEBA FALLIDA")
        print("=" * 60)
        print("‚ùå Error en la conexi√≥n SMTP")

if __name__ == "__main__":
    asyncio.run(main())
