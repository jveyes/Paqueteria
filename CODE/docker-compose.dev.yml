version: '3.8'

services:
  # Base de datos RDS - No necesitamos contenedor local
  # postgres:
  #   image: postgres:15
  #   environment:
  #     POSTGRES_DB: paqueteria
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - ./src:/app/src
      - ./templates:/app/templates
      - ./static:/app/static
      - ./alembic:/app/alembic
      - ./alembic.ini:/app/alembic.ini
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    environment:
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
    depends_on:
      redis:
        condition: service_healthy
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - app

  celery_worker:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
    environment:
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
    depends_on:
      redis:
        condition: service_healthy
    command: celery -A src.celery_app worker --loglevel=info --concurrency=2

# volumes:
#   postgres_data:  # No necesario con RDS
